/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 Vinylrecord.glb 
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
//import Vinylstack from "./Vinylstack"; // Import Vinylstack component

const Vinylrecord = React.memo(function Vinylrecord(props) {
  const { nodes, materials } = useGLTF("/models/vinylrecord-transformed.glb");

  const modelRef = useRef();
  const vinylRef = useRef(); // Separate ref for the vinyl record
  const shadowPlaneRef = useRef(); // Ref for the shadow plane

  // Bobbing effect
  useFrame((state) => {
    modelRef.current.position.y = -1.5 + Math.sin(state.clock.elapsedTime) * 0.15; // Bobbing effect
    // Rotate the vinyl record continuously around its Y axis
    if (vinylRef.current) {
      vinylRef.current.rotation.y -= 0.01; // Adjust this value to control the speed of rotation
    }
  });

  return (
    <group
      {...props}
      dispose={null}
      ref={modelRef}
      position={[0.30, 0.80, .2]}
      scale={[0.4, 0.4, 0.4]}
      rotation={[0.9, -0.2, 0]}
    >
      {/* Tree casting shadows */}
      <mesh
        geometry={nodes.tree.geometry}
        material={materials.PaletteMaterial001}
        position={[-2.5, 8.239, -0.822]}
        scale={0.445}
        castShadow
        receiveShadow
      />

      {/* Box casting shadows */}
      <mesh
        geometry={nodes.Box.geometry}
        material={materials.Wood}
        position={[0, 6.327, 0]}
        castShadow
        receiveShadow
      />

      {/* Vinyl record casting shadows */}
      <mesh
        ref={vinylRef}
        geometry={nodes.Vinyl_record.geometry}
        material={materials["Vinyl record"]}
        position={[-0.35, 6.512, 0.014]}
        scale={[0.871, 1.105, 0.871]}
        castShadow
        receiveShadow
      />

      {/* Locker casting shadows */}
      <mesh
        geometry={nodes.locker.geometry}
        material={materials["Material.001"]}
        position={[-0.769, 2.98, 0.536]}
        scale={[2.77, 2.938, 3.088]}
        castShadow
        receiveShadow
      >
      </mesh>

      {/* Ground element casting shadows */}
      <mesh
        geometry={nodes.Ground.geometry}
        material={materials.Ground}
        position={[-2.504, 6.833, -0.847]}
        scale={0.269}
        castShadow
        receiveShadow
      />

      {/* Shadow-receiving plane */}
      <mesh
        ref={shadowPlaneRef}
        receiveShadow
        position={[0, -1.5, 0]} // Fixed position under the model, not moving with it
        rotation={[-Math.PI / 2, 0, 0]} // Flat on the ground
        scale={[10, 10, 1]} // Scale to match the shadow area
      >
        <planeGeometry args={[20, 20]} />
        <shadowMaterial opacity={0.5} />
      </mesh>
    </group>
  );
});

export default Vinylrecord;
useGLTF.preload("/models/vinylrecord-transformed.glb");
// useGLTF.preload("/models/vinylstack-transformed.glb");
